1. Provide a high-level description (ie, using minimal amount of technical jargon) of each problem
in no more than 100 words.

Problem 1 (Quadratic Equation): ...
i wrote a program to solve a quadratic equation. you enter three values, and it finds the roots if they exist, or tells you when there's no real solution
Problem 2 (Wind Chill): ...
his program calculates how cold it feels outside, considering both the temperature and wind speed. it gives you the "feels like" temperature
Problem 3 (Day of the Week): ...
i made a program that takes a specific date and tells you what day of the week it falls on, like monday or thursday.
Problem 4 (Six-sided Die): ...
this program simulates rolling a six-sided die and prints out the result in a pattern similar to what you'd see on an actual die.
Problem 5 (Playing Card): ...
i wrote a program that randomly selects a card from a deck and displays it, like "king of spades" or "3 of diamonds".
Problem 6 (Dragon Curve): ...
this program generates a sequence for the dragon curve, which is a fractal. it uses a step-by-step recursive process to build the pattern.
Problem 7 (Greatest Common Divisor): ...
i made a program to find the greatest common divisor (gcd) of two numbers. it’s the largest number that divides both numbers even
Problem 8 (Root Finding): ...
i wrote a program that uses newton’s method to find the kth root of a number. it makes multiple guesses until it finds a close approximation.
Problem 9 (Sum of Powers): ...
this program calculates the sum of numbers from 1 to n, but each number is raised to a specific power before adding them together.
Problem 10 (Factorial Function): ...
i created a program to calculate the factorial of a number, which means multiplying that number by every positive integer below it.
Problem 11 (Fibonacci Function): ...
this program finds the nth number in the fibonacci sequence, where each number is the sum of the two numbers before it.
Problem 12 (Primality Test): ...
i made a program that checks whether a number is prime, meaning it's only divisible by itself and 1, without any other factors.
Problem 13 (Counting Primes): ...
this program counts how many prime numbers exist from 1 up to a given number. it checks each number in the range to see if it's prime.
Problem 14 (Perfect Numbers): ...
i wrote a program that finds perfect numbers, which are numbers equal to the sum of their divisors excluding themselvesm. for example, 6 is perfect because 1 + 2 + 3 = 6.
Problem 15 (Ramanujan Numbers): ...
this program finds numbers like 1729 that can be expressed as the sum of two cubes in two different ways, which makes them unique and interesting.
2. Did you receive help from anyone? List their names, status (classmate, course staff, other), and
the nature of help received.

Name                   Status           Help Received
----                   ------           -------------
shrey patel           course staff      guidance
...                    ...              ...

3. List any other comments here. Feel free to provide any feedback on how much you learned from
doing the assignment, and whether you enjoyed doing it.

good assigment had me think critically

...
